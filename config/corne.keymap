/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

/ {
    behaviors {
        td0: tap_dance_0 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_0";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp BSPC>, <&kp DEL>;
        };
        td1: tap_dance_1 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_1";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp SPACE>, <&kp RET>;
        };
    };

        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |  ESC |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | td0 |
// | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '  |
// | td0  |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  |RSHFT|
//                    | GUI | LWR | td3 |   | td3 | RSE  | ALT |
                        bindings = <
   &kp ESC        &kp Q &kp W &kp E    &kp R  &kp T         &kp Y &kp U  &kp I     &kp O   &kp P    &td0
   &mt LCTRL TAB  &kp A &kp S &kp D    &kp F  &kp G         &kp H &kp J  &kp K     &kp L   &kp SEMI &mt RCTRL SQT
   &mt LSHFT CLCK &kp Z &kp X &kp C    &kp V  &kp B         &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &kp RSHFT
                              &kp LGUI &tog 1 &kp SPACE     &td1  &mo 2  &kp RALT
                        >;
                };
                lower_layer {
// -----------------------------------------------------------------------------------------
// |  ^  |     |       |  UP   |       |     |   |  *  |  7  |  8  |  9  |  -  |  ^  |
// |  ^  |     |  LFT  |  DWN  |  RGT  |     |   |  /  |  4  |  5  |  6  |  +  |     |
// |     |     |       |       |       |     |   |  %  |  1  |  2  |  3  |  =  |     |
//                     |   ^   |   ^   |  ^  |   |  ^  |  .  |  0  |
                        bindings = <
   &none &none &none    &kp UP   &none     &none     &kp KP_MULTIPLY &kp KP_N7    &kp KP_N8    &kp KP_N9    &kp MINUS &trans
   &none &none &kp LEFT &kp DOWN &kp RIGHT &trans    &kp FSLH        &kp KP_N4    &kp KP_N5    &kp KP_N6    &kp PLUS  &none
   &none &none &none    &none    &none     &none     &kp PRCNT       &kp KP_N1    &kp KP_N2    &kp KP_N3    &kp EQUAL &none
                        &trans   &trans    &trans    &trans          &kp DOT      &kp KP_N0
                        >;
                };
                raise_layer {
// -----------------------------------------------------------------------------------------
// |  ^   |      |      |      |      |     |   | "^" |  &  |  $  |  (  |  )  | BKSP |
// |  ^   | BT_0 | BT_1 | BT_2 | BT_3 |     |   |  @  |  !  |  \  |  [  |  ]  |  `   |
// |BT_CLR|      |BT_PRV|BT_NXT|      |     |   |  _  |  #  | "|" |  {  |  }  |  ~   |
//                      |  GUI |      | SPC |   | ENT |     | ALT |
                        bindings = <
   &trans     &none        &none        &none        &none        &none      &kp CARET &kp AMPS  &kp DLLR &kp LPAR &kp RPAR &kp BSPC
   &trans     &kp BT_SEL 0 &kp BT_SEL 1 &kp BT_SEL 2 &kp BT_SEL 3 &none      &kp AT    &kp EXCL  &kp BSLH &kp LBKT &kp RBKT &kp GRAVE
   &kp BT_CLR &none        &kp BT_PRV   &kp BT_NXT   &none       &none       &kp UNDER &kp HASH  &kp PIPE &kp LBRC &kp RBRC &kp TILDE
                                        &trans       &none       &trans      &trans    &trans    &trans
                        >;
                };
        };
};
