/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

/ {
    behaviors {
        td0: tap_dance_0 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_1";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp BSPC>, <&kp DEL>;
        };
        td1: tap_dance_1 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_1";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp SPACE>, <&kp RET>;
        };
    };

        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |  td1 |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | td0 |
// | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
// | td0  |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
//                    | GUI | LWR | td3 |   | td3 | RSE  | ALT |
                        bindings = <
   &kp ESC        &kp Q &kp W &kp E    &kp R  &kp T    &kp Y &kp U  &kp I     &kp O   &kp P    &td0
   &mt LCTRL TAB  &kp A &kp S &kp D    &kp F  &kp G    &kp H &kp J  &kp K     &kp L   &kp SEMI &kp SQT
   &mt LSHFT CLCK &kp Z &kp X &kp C    &kp V  &kp B    &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &kp ESC
                              &kp LGUI &tog 1 &td1     &td1  &mo 2  &kp RALT
                        >;
                };
                lower_layer {
// -----------------------------------------------------------------------------------------
// |  ESC  |     |       |  UP   |       |     |   |  /  |  7  |  8  |  9  |  *  | BKSP |
// |       |     |  LFT  |  DWN  |  RGT  |     |   |     |  4  |  5  |  6  |  -  |      |
// | BTCLR | BT1 |  BT2  |  BT3  |  BT4  | BT5 |   |     |  3  |  2  |  1  |  +  |   =  |
//                       |  GUI  |       | SPC |   | ENT |  .  |  0  |
                        bindings = <
   &kp ESC    &trans       &trans       &kp UP       &trans       &trans         &kp FSLH   &kp N7    &kp N8    &kp N9    &kp KP_MULTIPLY &kp BSPC
   &trans     &trans       &kp LEFT     &kp DOWN     &kp RIGHT    &trans         &trans     &kp N4    &kp N5    &kp N6    &kp MINUS       &trans
   &trans &bt BT_SEL 0 &bt &trans &trans &trans &trans   &trans     &kp N1    &kp N2    &kp N3    &kp PLUS        &kp EQUAL
                                        &kp LGUI     &trans       &kp SPACE      &kp RET    &kp DOT   &kp N0
                        >;
                };

                raise_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
// | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
// | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &kp  TAB  &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT   &kp CARET &kp AMPS  &kp KP_MULTIPLY &kp LPAR &kp RPAR &kp BSPC
   &kp LCTRL &trans   &trans &trans   &trans   &trans      &kp MINUS &kp EQUAL &kp LBKT        &kp RBKT &kp BSLH &kp GRAVE
   &sys_reset &trans   &trans &trans   &trans   &trans      &kp UNDER &kp PLUS  &kp LBRC        &kp RBRC &kp PIPE &kp TILDE
                             &kp LGUI &trans   &kp SPACE   &kp RET   &trans    &kp RALT
                        >;
                };
        };
};
